[{"C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\reportWebVitals.js":"1","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\ImageUpload.js":"2","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\App.js":"3","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\index.js":"4","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\Post.js":"5","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\firebase.js":"6"},{"size":362,"mtime":1611753564000,"results":"7","hashOfConfig":"8"},{"size":2126,"mtime":1611763181395,"results":"9","hashOfConfig":"8"},{"size":6436,"mtime":1611766678966,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611753564000,"results":"11","hashOfConfig":"8"},{"size":534,"mtime":1611753564000,"results":"12","hashOfConfig":"8"},{"size":642,"mtime":1611753564000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8dmu60",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\reportWebVitals.js",[],"C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\ImageUpload.js",["28"],"import React, { useState } from \"react\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport \"./ImageUpload.css\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\n\r\nconst ImageUpload = ({ username }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [caption, setCaption] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // progress function ...\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        // Error function ...\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ...\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n\r\n            // post image inside db\r\n            db.collection(\"posts\").add({\r\n              imageUrl: url,\r\n              caption: caption,\r\n              username: username,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n\r\n            setProgress(0);\r\n            setCaption(\"\");\r\n            setImage(null);\r\n          });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"imageupload\">\r\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n      <Input\r\n        placeholder=\"Enter a caption\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button className=\"imageupload__button\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\App.js",["29"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./Post\";\nimport ImageUpload from \"./ImageUpload\";\n\nimport { db, auth } from \"./firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport InstagramEmbed from \"react-instagram-embed\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [registerOpen, setRegisterOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user is logged in...\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          // dont update username\n        } else {\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        // logout\n        setUser(null);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  // Login Functionality\n  const handleLogin = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpen(false);\n  };\n\n  //Signup Functionality\n  const handleRegister = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setRegisterOpen(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__login\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"\"\n              />\n            </center>\n\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button onClick={handleLogin}>Login</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__login\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"\"\n              />\n            </center>\n\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button onClick={handleRegister}>Register</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt=\"\"\n        />\n        {user?.displayName ? (\n          <div className=\"app__headerRight\">\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n            <Avatar\n              className=\"app__headerAvatar\"\n              alt={user.displayName}\n              src=\"/static/images/avatar/1.jpg\"\n            />\n          </div>\n        ) : (\n          <form className=\"app__loginHome\">\n            <Button onClick={() => setOpenSignIn(true)}>Login</Button>\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\n          </form>\n        )}\n      </div>\n\n      <div className=\"app__posts\">\n        <div className=\"app__postsLeft\">\n          {posts.map(({ id, post }) => (\n            <Post\n              user={user}\n              key={id}\n              postId={id}\n              username={post.username}\n              caption={post.caption}\n              imageUrl={post.imageUrl}\n            />\n          ))}\n        </div>\n        <div className=\"app__postsRight\">\n          <InstagramEmbed\n            url=\"https://www.instagram.com/p/B_uf9dmAGPw/\"\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName=\"div\"\n            protocol=\"\"\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n\n      {user?.displayName ? (\n        <div className=\"app__upload\">\n          <ImageUpload username={user.displayName} />\n        </div>\n      ) : (\n        <center>\n          <h3>Login to upload</h3>\n        </center>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\index.js",[],"C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\Post.js",[],"C:\\Users\\stay\\Desktop\\instagram-clone-main\\src\\firebase.js",[],{"ruleId":"30","severity":1,"message":"31","line":9,"column":10,"nodeType":"32","messageId":"33","endLine":9,"endColumn":13},{"ruleId":"30","severity":1,"message":"34","line":41,"column":10,"nodeType":"32","messageId":"33","endLine":41,"endColumn":22},"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'registerOpen' is assigned a value but never used."]